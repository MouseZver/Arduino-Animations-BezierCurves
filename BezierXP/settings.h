#pragma once

#include <stdint.h> // Для uint8_t, uint16_t

// ===============================
// == Настройки дисплея и кривых ==
// ===============================

// Размер экрана (обычно 240x240 для круглых/квадратных дисплеев)
#define WIDTH   240
#define HEIGHT  240

// Количество независимых цепочек Безье на экране
// Например: NUM_CHAINS = 1 — одна большая петля по центру
//           NUM_CHAINS = 4 — четыре цепочки, расположенные по сетке
#define NUM_CHAINS 1

// Количество точек на одну цепочку Безье
// Больше точек — более гладкая форма, но больше нагрузка
#define POINTS_PER_CHAIN 16

// Количество участков Безье на одну цепочкуa:\GitHub\Arduino-Animations-BezierCurves\BezierXP\settings.h
// Чем выше значение — тем "разбитее" будет кривая, но лучше детализация
// ⚠️ Важно : максимальное число участков = POINTS_PER_CHAIN / 3.
// Если указать больше — лишние точки игнорируются
#define SEGMENTS_PER_CHAIN 5

// Новый параметр: плотность точек
#define POINT_DENSITY 200          // Количество точек на участок Безье (чем больше — тем плотнее)

// Новый параметр: гладкость Безье
#define SMOOTHNESS 0.0f           // Усиление контрольных точек (меньше — плавнее)

// Режим отрисовки
#define MODE_LINES    0            // Режим линий
#define MODE_POINTS   1            // Режим точек
#define DRAW_MODE     MODE_LINES    // Выбранный режим отрисовки

// ===============================
// == Параметры анимации ==
// ===============================

extern float speedFactor;     // скорость движения
extern float chaosFactor;     // степень случайного изменения направления
extern float hueShift;        // скорость смены цветов
extern float hue;             // цветовой тон начального оттенка

// Цветовые функции
void hsvToRgb(float h, uint8_t s, uint8_t v, uint8_t rgb[3]);
uint16_t rgb565(uint8_t r, uint8_t g, uint8_t b);